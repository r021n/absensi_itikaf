<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Admin Login - Reservasi Itikaf</title>
    <link
      href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600&display=swap"
      rel="stylesheet"
    />
    <style>
      :root {
        --primary: #4caf50;
        --primary-dark: #45a049;
        --background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
        --surface: #ffffff;
        --text-primary: #2c3e50;
        --text-secondary: #606f7b;
        --shadow: 0 8px 24px rgba(0, 0, 0, 0.1);
        --border-radius: 16px;
        --transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
      }

      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }

      body {
        font-family: "Poppins", sans-serif;
        min-height: 100vh;
        display: flex;
        align-items: center;
        justify-content: center;
        background: var(--background);
        padding: 1rem;
      }

      .login-container {
        background: var(--surface);
        padding: 2.5rem;
        border-radius: var(--border-radius);
        box-shadow: var(--shadow);
        width: 100%;
        max-width: 440px;
        transform: translateY(-1rem);
        opacity: 0;
        animation: fadeInUp 0.6s cubic-bezier(0.4, 0, 0.2, 1) forwards;
      }

      @keyframes fadeInUp {
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }

      h1 {
        color: var(--text-primary);
        font-size: 1.75rem;
        font-weight: 600;
        text-align: center;
        margin-bottom: 2rem;
      }

      .form-group {
        margin-bottom: 1.5rem;
        position: relative;
      }

      label {
        display: block;
        color: var(--text-secondary);
        font-size: 0.875rem;
        margin-bottom: 0.5rem;
        font-weight: 500;
      }

      input {
        width: 100%;
        padding: 0.875rem;
        border: 2px solid #e9ecef;
        border-radius: 8px;
        font-size: 1rem;
        transition: var(--transition);
        background: #f8f9fa;
      }

      input:focus {
        outline: none;
        border-color: var(--primary);
        background: white;
        box-shadow: 0 4px 12px rgba(76, 175, 80, 0.15);
      }

      .password-wrapper {
        position: relative;
      }

      .toggle-password {
        position: absolute;
        right: 1rem;
        top: 50%;
        transform: translateY(-50%);
        background: none;
        border: none;
        cursor: pointer;
        padding: 0.5rem;
        color: var(--text-secondary);
        transition: var(--transition);
      }

      .toggle-password:hover {
        color: var(--primary);
      }

      button[type="submit"] {
        width: 100%;
        padding: 1rem;
        background: var(--primary);
        color: white;
        border: none;
        border-radius: 8px;
        font-size: 1rem;
        font-weight: 600;
        cursor: pointer;
        transition: var(--transition);
        margin-top: 1rem;
      }

      button[type="submit"]:hover {
        background: var(--primary-dark);
        transform: translateY(-1px);
        box-shadow: 0 4px 12px rgba(76, 175, 80, 0.3);
      }

      .error-message {
        color: #dc3545;
        font-size: 0.875rem;
        margin-top: 1rem;
        text-align: center;
        display: none;
        animation: shake 0.4s ease;
      }

      @keyframes shake {
        0%,
        100% {
          transform: translateX(0);
        }
        25% {
          transform: translateX(-6px);
        }
        50% {
          transform: translateX(6px);
        }
        75% {
          transform: translateX(-6px);
        }
      }

      @media (max-width: 480px) {
        .login-container {
          padding: 1.5rem;
          margin: 1rem;
        }

        h1 {
          font-size: 1.5rem;
        }

        input {
          padding: 0.75rem;
        }
      }
    </style>
  </head>
  <body>
    <div class="login-container">
      <h1>Admin Portal</h1>

      <form id="loginForm">
        <div class="form-group">
          <label for="username">Username</label>
          <input type="text" id="username" name="username" required />
        </div>

        <div class="form-group">
          <label for="password">Password</label>
          <div class="password-wrapper">
            <input type="password" id="password" name="password" required />
            <button
              type="button"
              class="toggle-password"
              aria-label="Toggle password visibility"
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="20"
                height="20"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"
              >
                <path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z" />
                <circle cx="12" cy="12" r="3" />
              </svg>
            </button>
          </div>
        </div>

        <button type="submit">Sign In</button>
      </form>

      <p id="error-message" class="error-message"></p>
    </div>

    <script>
      // Toggle password visibility
      document
        .querySelector(".toggle-password")
        .addEventListener("click", function (e) {
          const passwordInput = document.getElementById("password");
          const type =
            passwordInput.getAttribute("type") === "password"
              ? "text"
              : "password";
          passwordInput.setAttribute("type", type);
          this.querySelector("svg").setAttribute(
            "stroke",
            type === "password" ? "currentColor" : "#4CAF50"
          );
        });

      // Form submission handling
      document
        .getElementById("loginForm")
        .addEventListener("submit", async (e) => {
          e.preventDefault();
          const formData = new FormData(e.target);
          const errorMessage = document.getElementById("error-message");

          try {
            const response = await fetch("/admin/login", {
              method: "POST",
              headers: { "Content-Type": "application/json" },
              body: JSON.stringify(Object.fromEntries(formData)),
            });

            if (response.ok) {
              window.location.href = "/admin/show_registrant";
            } else {
              const data = await response.json();
              errorMessage.textContent = data.error || "Invalid credentials";
              errorMessage.style.display = "block";
            }
          } catch (err) {
            errorMessage.textContent = "Connection error. Please try again.";
            errorMessage.style.display = "block";
          }
        });
    </script>
  </body>
</html>
